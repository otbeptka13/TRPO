#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace dbPankovES.DomainObject.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="pankoves")]
	public partial class baseDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertShops(Shops instance);
    partial void UpdateShops(Shops instance);
    partial void DeleteShops(Shops instance);
    partial void InsertEmployees(Employees instance);
    partial void UpdateEmployees(Employees instance);
    partial void DeleteEmployees(Employees instance);
    partial void InsertUserTypes(UserTypes instance);
    partial void UpdateUserTypes(UserTypes instance);
    partial void DeleteUserTypes(UserTypes instance);
    partial void InsertGoods(Goods instance);
    partial void UpdateGoods(Goods instance);
    partial void DeleteGoods(Goods instance);
    partial void InsertGoodTypes(GoodTypes instance);
    partial void UpdateGoodTypes(GoodTypes instance);
    partial void DeleteGoodTypes(GoodTypes instance);
    partial void InsertOrders(Orders instance);
    partial void UpdateOrders(Orders instance);
    partial void DeleteOrders(Orders instance);
    partial void InsertProviders(Providers instance);
    partial void UpdateProviders(Providers instance);
    partial void DeleteProviders(Providers instance);
    partial void InsertShopWorkers(ShopWorkers instance);
    partial void UpdateShopWorkers(ShopWorkers instance);
    partial void DeleteShopWorkers(ShopWorkers instance);
    partial void InsertOrderGoods(OrderGoods instance);
    partial void UpdateOrderGoods(OrderGoods instance);
    partial void DeleteOrderGoods(OrderGoods instance);
    partial void InsertCapacity(Capacity instance);
    partial void UpdateCapacity(Capacity instance);
    partial void DeleteCapacity(Capacity instance);
    partial void InsertSupply(Supply instance);
    partial void UpdateSupply(Supply instance);
    partial void DeleteSupply(Supply instance);
    #endregion
		
		public baseDataDataContext() : 
				base(global::dbPankovES.DomainObject.Properties.Settings.Default.pankovesConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public baseDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public baseDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public baseDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public baseDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Shops> Shops
		{
			get
			{
				return this.GetTable<Shops>();
			}
		}
		
		public System.Data.Linq.Table<Employees> Employees
		{
			get
			{
				return this.GetTable<Employees>();
			}
		}
		
		public System.Data.Linq.Table<UserTypes> UserTypes
		{
			get
			{
				return this.GetTable<UserTypes>();
			}
		}
		
		public System.Data.Linq.Table<Goods> Goods
		{
			get
			{
				return this.GetTable<Goods>();
			}
		}
		
		public System.Data.Linq.Table<GoodTypes> GoodTypes
		{
			get
			{
				return this.GetTable<GoodTypes>();
			}
		}
		
		public System.Data.Linq.Table<Orders> Orders
		{
			get
			{
				return this.GetTable<Orders>();
			}
		}
		
		public System.Data.Linq.Table<Providers> Providers
		{
			get
			{
				return this.GetTable<Providers>();
			}
		}
		
		public System.Data.Linq.Table<ShopWorkers> ShopWorkers
		{
			get
			{
				return this.GetTable<ShopWorkers>();
			}
		}
		
		public System.Data.Linq.Table<GoodsView> GoodsView
		{
			get
			{
				return this.GetTable<GoodsView>();
			}
		}
		
		public System.Data.Linq.Table<OrderGoodsView> OrderGoodsView
		{
			get
			{
				return this.GetTable<OrderGoodsView>();
			}
		}
		
		public System.Data.Linq.Table<OrdersView> OrdersView
		{
			get
			{
				return this.GetTable<OrdersView>();
			}
		}
		
		public System.Data.Linq.Table<OrderGoods> OrderGoods
		{
			get
			{
				return this.GetTable<OrderGoods>();
			}
		}
		
		public System.Data.Linq.Table<ShopWorkersView> ShopWorkersView
		{
			get
			{
				return this.GetTable<ShopWorkersView>();
			}
		}
		
		public System.Data.Linq.Table<Capacity> Capacity
		{
			get
			{
				return this.GetTable<Capacity>();
			}
		}
		
		public System.Data.Linq.Table<Supply> Supply
		{
			get
			{
				return this.GetTable<Supply>();
			}
		}
		
		public System.Data.Linq.Table<SupplyView> SupplyView
		{
			get
			{
				return this.GetTable<SupplyView>();
			}
		}
		
		public System.Data.Linq.Table<CapacityView> CapacityView
		{
			get
			{
				return this.GetTable<CapacityView>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="store.TryLogin", IsComposable=true)]
		public System.Nullable<int> TryLogin([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string login, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string password)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), login, password).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="store.AddOrderGood")]
		public int AddOrderGood([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> orderId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> goodId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,2)")] System.Nullable<decimal> count, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,2)")] System.Nullable<decimal> priceOne, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,2)")] System.Nullable<decimal> summ)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderId, goodId, count, priceOne, summ);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="store.PaysByDate", IsComposable=true)]
		public IQueryable<OrdersView> PaysByDate([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> toDate)
		{
			return this.CreateMethodCallQuery<OrdersView>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="store.CreateOrder")]
		public int CreateOrder([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> sellerId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> shopId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,0)")] System.Nullable<decimal> price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string typePay, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> created)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sellerId, shopId, price, typePay, created);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="store.SupplySumByDate", IsComposable=true)]
		public System.Nullable<decimal> SupplySumByDate([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> toDate)
		{
			return ((System.Nullable<decimal>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="store.Shops")]
	public partial class Shops : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _adress;
		
		private System.TimeSpan _timeOpen;
		
		private System.TimeSpan _timeClose;
		
		private string _phone;
		
		private EntitySet<Orders> _Orders;
		
		private EntitySet<ShopWorkers> _ShopWorkers;
		
		private EntitySet<Capacity> _Capacity;
		
		private EntitySet<Supply> _Supply;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnadressChanging(string value);
    partial void OnadressChanged();
    partial void OntimeOpenChanging(System.TimeSpan value);
    partial void OntimeOpenChanged();
    partial void OntimeCloseChanging(System.TimeSpan value);
    partial void OntimeCloseChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    #endregion
		
		public Shops()
		{
			this._Orders = new EntitySet<Orders>(new Action<Orders>(this.attach_Orders), new Action<Orders>(this.detach_Orders));
			this._ShopWorkers = new EntitySet<ShopWorkers>(new Action<ShopWorkers>(this.attach_ShopWorkers), new Action<ShopWorkers>(this.detach_ShopWorkers));
			this._Capacity = new EntitySet<Capacity>(new Action<Capacity>(this.attach_Capacity), new Action<Capacity>(this.detach_Capacity));
			this._Supply = new EntitySet<Supply>(new Action<Supply>(this.attach_Supply), new Action<Supply>(this.detach_Supply));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adress", DbType="NVarChar(100)")]
		public string adress
		{
			get
			{
				return this._adress;
			}
			set
			{
				if ((this._adress != value))
				{
					this.OnadressChanging(value);
					this.SendPropertyChanging();
					this._adress = value;
					this.SendPropertyChanged("adress");
					this.OnadressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeOpen", DbType="Time NOT NULL")]
		public System.TimeSpan timeOpen
		{
			get
			{
				return this._timeOpen;
			}
			set
			{
				if ((this._timeOpen != value))
				{
					this.OntimeOpenChanging(value);
					this.SendPropertyChanging();
					this._timeOpen = value;
					this.SendPropertyChanged("timeOpen");
					this.OntimeOpenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeClose", DbType="Time NOT NULL")]
		public System.TimeSpan timeClose
		{
			get
			{
				return this._timeClose;
			}
			set
			{
				if ((this._timeClose != value))
				{
					this.OntimeCloseChanging(value);
					this.SendPropertyChanging();
					this._timeClose = value;
					this.SendPropertyChanged("timeClose");
					this.OntimeCloseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(30)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shops_Orders", Storage="_Orders", ThisKey="id", OtherKey="shopId")]
		public EntitySet<Orders> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shops_ShopWorkers", Storage="_ShopWorkers", ThisKey="id", OtherKey="shopId")]
		public EntitySet<ShopWorkers> ShopWorkers
		{
			get
			{
				return this._ShopWorkers;
			}
			set
			{
				this._ShopWorkers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shops_Capacity", Storage="_Capacity", ThisKey="id", OtherKey="shopId")]
		public EntitySet<Capacity> Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				this._Capacity.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shops_Supply", Storage="_Supply", ThisKey="id", OtherKey="shopId")]
		public EntitySet<Supply> Supply
		{
			get
			{
				return this._Supply;
			}
			set
			{
				this._Supply.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Shops = this;
		}
		
		private void detach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Shops = null;
		}
		
		private void attach_ShopWorkers(ShopWorkers entity)
		{
			this.SendPropertyChanging();
			entity.Shops = this;
		}
		
		private void detach_ShopWorkers(ShopWorkers entity)
		{
			this.SendPropertyChanging();
			entity.Shops = null;
		}
		
		private void attach_Capacity(Capacity entity)
		{
			this.SendPropertyChanging();
			entity.Shops = this;
		}
		
		private void detach_Capacity(Capacity entity)
		{
			this.SendPropertyChanging();
			entity.Shops = null;
		}
		
		private void attach_Supply(Supply entity)
		{
			this.SendPropertyChanging();
			entity.Shops = this;
		}
		
		private void detach_Supply(Supply entity)
		{
			this.SendPropertyChanging();
			entity.Shops = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="store.Employees")]
	public partial class Employees : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _f;
		
		private string _i;
		
		private string _o;
		
		private string _phone;
		
		private string _email;
		
		private string _login;
		
		private string _passwordHash;
		
		private System.Nullable<long> _userType;
		
		private EntitySet<Orders> _Orders;
		
		private EntitySet<ShopWorkers> _ShopWorkers;
		
		private EntityRef<UserTypes> _UserTypes;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnfChanging(string value);
    partial void OnfChanged();
    partial void OniChanging(string value);
    partial void OniChanged();
    partial void OnoChanging(string value);
    partial void OnoChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnloginChanging(string value);
    partial void OnloginChanged();
    partial void OnpasswordHashChanging(string value);
    partial void OnpasswordHashChanged();
    partial void OnuserTypeChanging(System.Nullable<long> value);
    partial void OnuserTypeChanged();
    #endregion
		
		public Employees()
		{
			this._Orders = new EntitySet<Orders>(new Action<Orders>(this.attach_Orders), new Action<Orders>(this.detach_Orders));
			this._ShopWorkers = new EntitySet<ShopWorkers>(new Action<ShopWorkers>(this.attach_ShopWorkers), new Action<ShopWorkers>(this.detach_ShopWorkers));
			this._UserTypes = default(EntityRef<UserTypes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string f
		{
			get
			{
				return this._f;
			}
			set
			{
				if ((this._f != value))
				{
					this.OnfChanging(value);
					this.SendPropertyChanging();
					this._f = value;
					this.SendPropertyChanged("f");
					this.OnfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_i", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string i
		{
			get
			{
				return this._i;
			}
			set
			{
				if ((this._i != value))
				{
					this.OniChanging(value);
					this.SendPropertyChanging();
					this._i = value;
					this.SendPropertyChanged("i");
					this.OniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_o", DbType="NVarChar(50)")]
		public string o
		{
			get
			{
				return this._o;
			}
			set
			{
				if ((this._o != value))
				{
					this.OnoChanging(value);
					this.SendPropertyChanging();
					this._o = value;
					this.SendPropertyChanged("o");
					this.OnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(15)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="NVarChar(50)")]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this.OnloginChanging(value);
					this.SendPropertyChanging();
					this._login = value;
					this.SendPropertyChanged("login");
					this.OnloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwordHash", DbType="NVarChar(50)")]
		public string passwordHash
		{
			get
			{
				return this._passwordHash;
			}
			set
			{
				if ((this._passwordHash != value))
				{
					this.OnpasswordHashChanging(value);
					this.SendPropertyChanging();
					this._passwordHash = value;
					this.SendPropertyChanged("passwordHash");
					this.OnpasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userType", DbType="BigInt")]
		public System.Nullable<long> userType
		{
			get
			{
				return this._userType;
			}
			set
			{
				if ((this._userType != value))
				{
					if (this._UserTypes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserTypeChanging(value);
					this.SendPropertyChanging();
					this._userType = value;
					this.SendPropertyChanged("userType");
					this.OnuserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employees_Orders", Storage="_Orders", ThisKey="id", OtherKey="sellerId")]
		public EntitySet<Orders> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employees_ShopWorkers", Storage="_ShopWorkers", ThisKey="id", OtherKey="workerId")]
		public EntitySet<ShopWorkers> ShopWorkers
		{
			get
			{
				return this._ShopWorkers;
			}
			set
			{
				this._ShopWorkers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTypes_Employees", Storage="_UserTypes", ThisKey="userType", OtherKey="id", IsForeignKey=true)]
		public UserTypes UserTypes
		{
			get
			{
				return this._UserTypes.Entity;
			}
			set
			{
				UserTypes previousValue = this._UserTypes.Entity;
				if (((previousValue != value) 
							|| (this._UserTypes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTypes.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._UserTypes.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._userType = value.id;
					}
					else
					{
						this._userType = default(Nullable<long>);
					}
					this.SendPropertyChanged("UserTypes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Employees = this;
		}
		
		private void detach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Employees = null;
		}
		
		private void attach_ShopWorkers(ShopWorkers entity)
		{
			this.SendPropertyChanging();
			entity.Employees = this;
		}
		
		private void detach_ShopWorkers(ShopWorkers entity)
		{
			this.SendPropertyChanging();
			entity.Employees = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="store.UserTypes")]
	public partial class UserTypes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private EntitySet<Employees> _Employees;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public UserTypes()
		{
			this._Employees = new EntitySet<Employees>(new Action<Employees>(this.attach_Employees), new Action<Employees>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(20)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTypes_Employees", Storage="_Employees", ThisKey="id", OtherKey="userType")]
		public EntitySet<Employees> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employees entity)
		{
			this.SendPropertyChanging();
			entity.UserTypes = this;
		}
		
		private void detach_Employees(Employees entity)
		{
			this.SendPropertyChanging();
			entity.UserTypes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="store.Goods")]
	public partial class Goods : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private long _typeId;
		
		private decimal _price;
		
		private string _info;
		
		private EntitySet<OrderGoods> _OrderGoods;
		
		private EntitySet<Capacity> _Capacity;
		
		private EntitySet<Supply> _Supply;
		
		private EntityRef<GoodTypes> _GoodTypes;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OntypeIdChanging(long value);
    partial void OntypeIdChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void OninfoChanging(string value);
    partial void OninfoChanged();
    #endregion
		
		public Goods()
		{
			this._OrderGoods = new EntitySet<OrderGoods>(new Action<OrderGoods>(this.attach_OrderGoods), new Action<OrderGoods>(this.detach_OrderGoods));
			this._Capacity = new EntitySet<Capacity>(new Action<Capacity>(this.attach_Capacity), new Action<Capacity>(this.detach_Capacity));
			this._Supply = new EntitySet<Supply>(new Action<Supply>(this.attach_Supply), new Action<Supply>(this.detach_Supply));
			this._GoodTypes = default(EntityRef<GoodTypes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeId", DbType="BigInt NOT NULL")]
		public long typeId
		{
			get
			{
				return this._typeId;
			}
			set
			{
				if ((this._typeId != value))
				{
					if (this._GoodTypes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntypeIdChanging(value);
					this.SendPropertyChanging();
					this._typeId = value;
					this.SendPropertyChanged("typeId");
					this.OntypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_info", DbType="NVarChar(50)")]
		public string info
		{
			get
			{
				return this._info;
			}
			set
			{
				if ((this._info != value))
				{
					this.OninfoChanging(value);
					this.SendPropertyChanging();
					this._info = value;
					this.SendPropertyChanged("info");
					this.OninfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goods_OrderGoods", Storage="_OrderGoods", ThisKey="id", OtherKey="goodId")]
		public EntitySet<OrderGoods> OrderGoods
		{
			get
			{
				return this._OrderGoods;
			}
			set
			{
				this._OrderGoods.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goods_Capacity", Storage="_Capacity", ThisKey="id", OtherKey="goodId")]
		public EntitySet<Capacity> Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				this._Capacity.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goods_Supply", Storage="_Supply", ThisKey="id", OtherKey="goodId")]
		public EntitySet<Supply> Supply
		{
			get
			{
				return this._Supply;
			}
			set
			{
				this._Supply.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoodTypes_Goods", Storage="_GoodTypes", ThisKey="typeId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GoodTypes GoodTypes
		{
			get
			{
				return this._GoodTypes.Entity;
			}
			set
			{
				GoodTypes previousValue = this._GoodTypes.Entity;
				if (((previousValue != value) 
							|| (this._GoodTypes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GoodTypes.Entity = null;
						previousValue.Goods.Remove(this);
					}
					this._GoodTypes.Entity = value;
					if ((value != null))
					{
						value.Goods.Add(this);
						this._typeId = value.id;
					}
					else
					{
						this._typeId = default(long);
					}
					this.SendPropertyChanged("GoodTypes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderGoods(OrderGoods entity)
		{
			this.SendPropertyChanging();
			entity.Goods = this;
		}
		
		private void detach_OrderGoods(OrderGoods entity)
		{
			this.SendPropertyChanging();
			entity.Goods = null;
		}
		
		private void attach_Capacity(Capacity entity)
		{
			this.SendPropertyChanging();
			entity.Goods = this;
		}
		
		private void detach_Capacity(Capacity entity)
		{
			this.SendPropertyChanging();
			entity.Goods = null;
		}
		
		private void attach_Supply(Supply entity)
		{
			this.SendPropertyChanging();
			entity.Goods = this;
		}
		
		private void detach_Supply(Supply entity)
		{
			this.SendPropertyChanging();
			entity.Goods = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="store.GoodTypes")]
	public partial class GoodTypes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private string _info;
		
		private EntitySet<Goods> _Goods;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OninfoChanging(string value);
    partial void OninfoChanged();
    #endregion
		
		public GoodTypes()
		{
			this._Goods = new EntitySet<Goods>(new Action<Goods>(this.attach_Goods), new Action<Goods>(this.detach_Goods));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(25)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_info", DbType="NVarChar(50)")]
		public string info
		{
			get
			{
				return this._info;
			}
			set
			{
				if ((this._info != value))
				{
					this.OninfoChanging(value);
					this.SendPropertyChanging();
					this._info = value;
					this.SendPropertyChanged("info");
					this.OninfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoodTypes_Goods", Storage="_Goods", ThisKey="id", OtherKey="typeId")]
		public EntitySet<Goods> Goods
		{
			get
			{
				return this._Goods;
			}
			set
			{
				this._Goods.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Goods(Goods entity)
		{
			this.SendPropertyChanging();
			entity.GoodTypes = this;
		}
		
		private void detach_Goods(Goods entity)
		{
			this.SendPropertyChanging();
			entity.GoodTypes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="store.Orders")]
	public partial class Orders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _sellerId;
		
		private long _shopId;
		
		private decimal _price;
		
		private string _typePay;
		
		private System.DateTime _created;
		
		private EntitySet<OrderGoods> _OrderGoods;
		
		private EntityRef<Employees> _Employees;
		
		private EntityRef<Shops> _Shops;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnsellerIdChanging(long value);
    partial void OnsellerIdChanged();
    partial void OnshopIdChanging(long value);
    partial void OnshopIdChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void OntypePayChanging(string value);
    partial void OntypePayChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    #endregion
		
		public Orders()
		{
			this._OrderGoods = new EntitySet<OrderGoods>(new Action<OrderGoods>(this.attach_OrderGoods), new Action<OrderGoods>(this.detach_OrderGoods));
			this._Employees = default(EntityRef<Employees>);
			this._Shops = default(EntityRef<Shops>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sellerId", DbType="BigInt NOT NULL")]
		public long sellerId
		{
			get
			{
				return this._sellerId;
			}
			set
			{
				if ((this._sellerId != value))
				{
					if (this._Employees.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsellerIdChanging(value);
					this.SendPropertyChanging();
					this._sellerId = value;
					this.SendPropertyChanged("sellerId");
					this.OnsellerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shopId", DbType="BigInt NOT NULL")]
		public long shopId
		{
			get
			{
				return this._shopId;
			}
			set
			{
				if ((this._shopId != value))
				{
					if (this._Shops.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshopIdChanging(value);
					this.SendPropertyChanging();
					this._shopId = value;
					this.SendPropertyChanged("shopId");
					this.OnshopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typePay", DbType="NVarChar(50)")]
		public string typePay
		{
			get
			{
				return this._typePay;
			}
			set
			{
				if ((this._typePay != value))
				{
					this.OntypePayChanging(value);
					this.SendPropertyChanging();
					this._typePay = value;
					this.SendPropertyChanged("typePay");
					this.OntypePayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_OrderGoods", Storage="_OrderGoods", ThisKey="id", OtherKey="orderId")]
		public EntitySet<OrderGoods> OrderGoods
		{
			get
			{
				return this._OrderGoods;
			}
			set
			{
				this._OrderGoods.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employees_Orders", Storage="_Employees", ThisKey="sellerId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Employees Employees
		{
			get
			{
				return this._Employees.Entity;
			}
			set
			{
				Employees previousValue = this._Employees.Entity;
				if (((previousValue != value) 
							|| (this._Employees.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employees.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Employees.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._sellerId = value.id;
					}
					else
					{
						this._sellerId = default(long);
					}
					this.SendPropertyChanged("Employees");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shops_Orders", Storage="_Shops", ThisKey="shopId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Shops Shops
		{
			get
			{
				return this._Shops.Entity;
			}
			set
			{
				Shops previousValue = this._Shops.Entity;
				if (((previousValue != value) 
							|| (this._Shops.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shops.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Shops.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._shopId = value.id;
					}
					else
					{
						this._shopId = default(long);
					}
					this.SendPropertyChanged("Shops");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderGoods(OrderGoods entity)
		{
			this.SendPropertyChanging();
			entity.Orders = this;
		}
		
		private void detach_OrderGoods(OrderGoods entity)
		{
			this.SendPropertyChanging();
			entity.Orders = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="store.Providers")]
	public partial class Providers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private string _email;
		
		private string _phone;
		
		private EntitySet<Supply> _Supply;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    #endregion
		
		public Providers()
		{
			this._Supply = new EntitySet<Supply>(new Action<Supply>(this.attach_Supply), new Action<Supply>(this.detach_Supply));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(25)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(20)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Providers_Supply", Storage="_Supply", ThisKey="id", OtherKey="providerId")]
		public EntitySet<Supply> Supply
		{
			get
			{
				return this._Supply;
			}
			set
			{
				this._Supply.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Supply(Supply entity)
		{
			this.SendPropertyChanging();
			entity.Providers = this;
		}
		
		private void detach_Supply(Supply entity)
		{
			this.SendPropertyChanging();
			entity.Providers = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="store.ShopWorkers")]
	public partial class ShopWorkers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _shopId;
		
		private long _workerId;
		
		private System.DateTime _hireDate;
		
		private EntityRef<Shops> _Shops;
		
		private EntityRef<Employees> _Employees;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnshopIdChanging(long value);
    partial void OnshopIdChanged();
    partial void OnworkerIdChanging(long value);
    partial void OnworkerIdChanged();
    partial void OnhireDateChanging(System.DateTime value);
    partial void OnhireDateChanged();
    #endregion
		
		public ShopWorkers()
		{
			this._Shops = default(EntityRef<Shops>);
			this._Employees = default(EntityRef<Employees>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shopId", DbType="BigInt NOT NULL")]
		public long shopId
		{
			get
			{
				return this._shopId;
			}
			set
			{
				if ((this._shopId != value))
				{
					if (this._Shops.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshopIdChanging(value);
					this.SendPropertyChanging();
					this._shopId = value;
					this.SendPropertyChanged("shopId");
					this.OnshopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workerId", DbType="BigInt NOT NULL")]
		public long workerId
		{
			get
			{
				return this._workerId;
			}
			set
			{
				if ((this._workerId != value))
				{
					if (this._Employees.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnworkerIdChanging(value);
					this.SendPropertyChanging();
					this._workerId = value;
					this.SendPropertyChanged("workerId");
					this.OnworkerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hireDate", DbType="DateTime NOT NULL")]
		public System.DateTime hireDate
		{
			get
			{
				return this._hireDate;
			}
			set
			{
				if ((this._hireDate != value))
				{
					this.OnhireDateChanging(value);
					this.SendPropertyChanging();
					this._hireDate = value;
					this.SendPropertyChanged("hireDate");
					this.OnhireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shops_ShopWorkers", Storage="_Shops", ThisKey="shopId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Shops Shops
		{
			get
			{
				return this._Shops.Entity;
			}
			set
			{
				Shops previousValue = this._Shops.Entity;
				if (((previousValue != value) 
							|| (this._Shops.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shops.Entity = null;
						previousValue.ShopWorkers.Remove(this);
					}
					this._Shops.Entity = value;
					if ((value != null))
					{
						value.ShopWorkers.Add(this);
						this._shopId = value.id;
					}
					else
					{
						this._shopId = default(long);
					}
					this.SendPropertyChanged("Shops");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employees_ShopWorkers", Storage="_Employees", ThisKey="workerId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Employees Employees
		{
			get
			{
				return this._Employees.Entity;
			}
			set
			{
				Employees previousValue = this._Employees.Entity;
				if (((previousValue != value) 
							|| (this._Employees.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employees.Entity = null;
						previousValue.ShopWorkers.Remove(this);
					}
					this._Employees.Entity = value;
					if ((value != null))
					{
						value.ShopWorkers.Add(this);
						this._workerId = value.id;
					}
					else
					{
						this._workerId = default(long);
					}
					this.SendPropertyChanged("Employees");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="store.GoodsView")]
	public partial class GoodsView
	{
		
		private long _id;
		
		private string _name;
		
		private long _typeId;
		
		private decimal _price;
		
		private string _info;
		
		private string _typeName;
		
		private string _typeInfo;
		
		public GoodsView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="BigInt NOT NULL")]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeId", DbType="BigInt NOT NULL")]
		public long typeId
		{
			get
			{
				return this._typeId;
			}
			set
			{
				if ((this._typeId != value))
				{
					this._typeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this._price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_info", DbType="NVarChar(50)")]
		public string info
		{
			get
			{
				return this._info;
			}
			set
			{
				if ((this._info != value))
				{
					this._info = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeName", DbType="NVarChar(25)")]
		public string typeName
		{
			get
			{
				return this._typeName;
			}
			set
			{
				if ((this._typeName != value))
				{
					this._typeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeInfo", DbType="NVarChar(50)")]
		public string typeInfo
		{
			get
			{
				return this._typeInfo;
			}
			set
			{
				if ((this._typeInfo != value))
				{
					this._typeInfo = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="store.OrderGoodsView")]
	public partial class OrderGoodsView
	{
		
		private long _id;
		
		private decimal _orderPrice;
		
		private string _typePay;
		
		private System.DateTime _created;
		
		private string _goodName;
		
		private long _typeId;
		
		private decimal _goodPrice;
		
		private string _goodInfo;
		
		private string _typeName;
		
		private string _info;
		
		private long _sellerId;
		
		private string _f;
		
		private string _i;
		
		private string _o;
		
		private string _phone;
		
		private string _email;
		
		private string _login;
		
		private string _passwordHash;
		
		private long _shopId;
		
		private string _adress;
		
		private System.TimeSpan _timeOpen;
		
		private System.TimeSpan _timeClose;
		
		private string _shopPhone;
		
		public OrderGoodsView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="BigInt NOT NULL")]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderPrice", DbType="Decimal(10,2) NOT NULL")]
		public decimal orderPrice
		{
			get
			{
				return this._orderPrice;
			}
			set
			{
				if ((this._orderPrice != value))
				{
					this._orderPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typePay", DbType="NVarChar(50)")]
		public string typePay
		{
			get
			{
				return this._typePay;
			}
			set
			{
				if ((this._typePay != value))
				{
					this._typePay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this._created = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goodName", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string goodName
		{
			get
			{
				return this._goodName;
			}
			set
			{
				if ((this._goodName != value))
				{
					this._goodName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeId", DbType="BigInt NOT NULL")]
		public long typeId
		{
			get
			{
				return this._typeId;
			}
			set
			{
				if ((this._typeId != value))
				{
					this._typeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goodPrice", DbType="Decimal(10,2) NOT NULL")]
		public decimal goodPrice
		{
			get
			{
				return this._goodPrice;
			}
			set
			{
				if ((this._goodPrice != value))
				{
					this._goodPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goodInfo", DbType="NVarChar(50)")]
		public string goodInfo
		{
			get
			{
				return this._goodInfo;
			}
			set
			{
				if ((this._goodInfo != value))
				{
					this._goodInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeName", DbType="NVarChar(25)")]
		public string typeName
		{
			get
			{
				return this._typeName;
			}
			set
			{
				if ((this._typeName != value))
				{
					this._typeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_info", DbType="NVarChar(50)")]
		public string info
		{
			get
			{
				return this._info;
			}
			set
			{
				if ((this._info != value))
				{
					this._info = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sellerId", DbType="BigInt NOT NULL")]
		public long sellerId
		{
			get
			{
				return this._sellerId;
			}
			set
			{
				if ((this._sellerId != value))
				{
					this._sellerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string f
		{
			get
			{
				return this._f;
			}
			set
			{
				if ((this._f != value))
				{
					this._f = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_i", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string i
		{
			get
			{
				return this._i;
			}
			set
			{
				if ((this._i != value))
				{
					this._i = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_o", DbType="NVarChar(50)")]
		public string o
		{
			get
			{
				return this._o;
			}
			set
			{
				if ((this._o != value))
				{
					this._o = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(15)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this._phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this._email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="NVarChar(50)")]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this._login = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwordHash", DbType="NVarChar(50)")]
		public string passwordHash
		{
			get
			{
				return this._passwordHash;
			}
			set
			{
				if ((this._passwordHash != value))
				{
					this._passwordHash = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shopId", DbType="BigInt NOT NULL")]
		public long shopId
		{
			get
			{
				return this._shopId;
			}
			set
			{
				if ((this._shopId != value))
				{
					this._shopId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adress", DbType="NVarChar(100)")]
		public string adress
		{
			get
			{
				return this._adress;
			}
			set
			{
				if ((this._adress != value))
				{
					this._adress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeOpen", DbType="Time NOT NULL")]
		public System.TimeSpan timeOpen
		{
			get
			{
				return this._timeOpen;
			}
			set
			{
				if ((this._timeOpen != value))
				{
					this._timeOpen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeClose", DbType="Time NOT NULL")]
		public System.TimeSpan timeClose
		{
			get
			{
				return this._timeClose;
			}
			set
			{
				if ((this._timeClose != value))
				{
					this._timeClose = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shopPhone", DbType="NVarChar(30)")]
		public string shopPhone
		{
			get
			{
				return this._shopPhone;
			}
			set
			{
				if ((this._shopPhone != value))
				{
					this._shopPhone = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="store.OrdersView")]
	public partial class OrdersView
	{
		
		private long _id;
		
		private decimal _price;
		
		private string _typePay;
		
		private System.DateTime _created;
		
		private long _sellerId;
		
		private string _f;
		
		private string _i;
		
		private string _o;
		
		private string _phone;
		
		private string _email;
		
		private string _login;
		
		private string _passwordHash;
		
		private long _shopId;
		
		private string _adress;
		
		private System.TimeSpan _timeOpen;
		
		private System.TimeSpan _timeClose;
		
		private string _shopPhone;
		
		public OrdersView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="BigInt NOT NULL")]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this._price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typePay", DbType="NVarChar(50)")]
		public string typePay
		{
			get
			{
				return this._typePay;
			}
			set
			{
				if ((this._typePay != value))
				{
					this._typePay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this._created = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sellerId", DbType="BigInt NOT NULL")]
		public long sellerId
		{
			get
			{
				return this._sellerId;
			}
			set
			{
				if ((this._sellerId != value))
				{
					this._sellerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string f
		{
			get
			{
				return this._f;
			}
			set
			{
				if ((this._f != value))
				{
					this._f = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_i", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string i
		{
			get
			{
				return this._i;
			}
			set
			{
				if ((this._i != value))
				{
					this._i = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_o", DbType="NVarChar(50)")]
		public string o
		{
			get
			{
				return this._o;
			}
			set
			{
				if ((this._o != value))
				{
					this._o = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(15)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this._phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this._email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="NVarChar(50)")]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this._login = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwordHash", DbType="NVarChar(50)")]
		public string passwordHash
		{
			get
			{
				return this._passwordHash;
			}
			set
			{
				if ((this._passwordHash != value))
				{
					this._passwordHash = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shopId", DbType="BigInt NOT NULL")]
		public long shopId
		{
			get
			{
				return this._shopId;
			}
			set
			{
				if ((this._shopId != value))
				{
					this._shopId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adress", DbType="NVarChar(100)")]
		public string adress
		{
			get
			{
				return this._adress;
			}
			set
			{
				if ((this._adress != value))
				{
					this._adress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeOpen", DbType="Time NOT NULL")]
		public System.TimeSpan timeOpen
		{
			get
			{
				return this._timeOpen;
			}
			set
			{
				if ((this._timeOpen != value))
				{
					this._timeOpen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeClose", DbType="Time NOT NULL")]
		public System.TimeSpan timeClose
		{
			get
			{
				return this._timeClose;
			}
			set
			{
				if ((this._timeClose != value))
				{
					this._timeClose = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shopPhone", DbType="NVarChar(30)")]
		public string shopPhone
		{
			get
			{
				return this._shopPhone;
			}
			set
			{
				if ((this._shopPhone != value))
				{
					this._shopPhone = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="store.OrderGoods")]
	public partial class OrderGoods : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _orderId;
		
		private long _goodId;
		
		private System.Nullable<decimal> _count;
		
		private System.Nullable<decimal> _priceOne;
		
		private System.Nullable<decimal> _summ;
		
		private EntityRef<Goods> _Goods;
		
		private EntityRef<Orders> _Orders;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnorderIdChanging(long value);
    partial void OnorderIdChanged();
    partial void OngoodIdChanging(long value);
    partial void OngoodIdChanged();
    partial void OncountChanging(System.Nullable<decimal> value);
    partial void OncountChanged();
    partial void OnpriceOneChanging(System.Nullable<decimal> value);
    partial void OnpriceOneChanged();
    partial void OnsummChanging(System.Nullable<decimal> value);
    partial void OnsummChanged();
    #endregion
		
		public OrderGoods()
		{
			this._Goods = default(EntityRef<Goods>);
			this._Orders = default(EntityRef<Orders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long orderId
		{
			get
			{
				return this._orderId;
			}
			set
			{
				if ((this._orderId != value))
				{
					if (this._Orders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnorderIdChanging(value);
					this.SendPropertyChanging();
					this._orderId = value;
					this.SendPropertyChanged("orderId");
					this.OnorderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goodId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long goodId
		{
			get
			{
				return this._goodId;
			}
			set
			{
				if ((this._goodId != value))
				{
					if (this._Goods.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngoodIdChanging(value);
					this.SendPropertyChanging();
					this._goodId = value;
					this.SendPropertyChanged("goodId");
					this.OngoodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this.OncountChanging(value);
					this.SendPropertyChanging();
					this._count = value;
					this.SendPropertyChanged("count");
					this.OncountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priceOne", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> priceOne
		{
			get
			{
				return this._priceOne;
			}
			set
			{
				if ((this._priceOne != value))
				{
					this.OnpriceOneChanging(value);
					this.SendPropertyChanging();
					this._priceOne = value;
					this.SendPropertyChanged("priceOne");
					this.OnpriceOneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_summ", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> summ
		{
			get
			{
				return this._summ;
			}
			set
			{
				if ((this._summ != value))
				{
					this.OnsummChanging(value);
					this.SendPropertyChanging();
					this._summ = value;
					this.SendPropertyChanged("summ");
					this.OnsummChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goods_OrderGoods", Storage="_Goods", ThisKey="goodId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Goods Goods
		{
			get
			{
				return this._Goods.Entity;
			}
			set
			{
				Goods previousValue = this._Goods.Entity;
				if (((previousValue != value) 
							|| (this._Goods.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Goods.Entity = null;
						previousValue.OrderGoods.Remove(this);
					}
					this._Goods.Entity = value;
					if ((value != null))
					{
						value.OrderGoods.Add(this);
						this._goodId = value.id;
					}
					else
					{
						this._goodId = default(long);
					}
					this.SendPropertyChanged("Goods");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_OrderGoods", Storage="_Orders", ThisKey="orderId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Orders Orders
		{
			get
			{
				return this._Orders.Entity;
			}
			set
			{
				Orders previousValue = this._Orders.Entity;
				if (((previousValue != value) 
							|| (this._Orders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Orders.Entity = null;
						previousValue.OrderGoods.Remove(this);
					}
					this._Orders.Entity = value;
					if ((value != null))
					{
						value.OrderGoods.Add(this);
						this._orderId = value.id;
					}
					else
					{
						this._orderId = default(long);
					}
					this.SendPropertyChanged("Orders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="store.ShopWorkersView")]
	public partial class ShopWorkersView
	{
		
		private long _id;
		
		private long _shopId;
		
		private string _adress;
		
		private System.TimeSpan _timeOpen;
		
		private System.TimeSpan _timeClose;
		
		private string _shopPhone;
		
		private long _workerid;
		
		private string _f;
		
		private string _i;
		
		private string _o;
		
		private string _phone;
		
		private string _email;
		
		private string _login;
		
		private string _passwordHash;
		
		private long _userTypeId;
		
		private string _userTypeName;
		
		public ShopWorkersView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="BigInt NOT NULL")]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shopId", DbType="BigInt NOT NULL")]
		public long shopId
		{
			get
			{
				return this._shopId;
			}
			set
			{
				if ((this._shopId != value))
				{
					this._shopId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adress", DbType="NVarChar(100)")]
		public string adress
		{
			get
			{
				return this._adress;
			}
			set
			{
				if ((this._adress != value))
				{
					this._adress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeOpen", DbType="Time NOT NULL")]
		public System.TimeSpan timeOpen
		{
			get
			{
				return this._timeOpen;
			}
			set
			{
				if ((this._timeOpen != value))
				{
					this._timeOpen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeClose", DbType="Time NOT NULL")]
		public System.TimeSpan timeClose
		{
			get
			{
				return this._timeClose;
			}
			set
			{
				if ((this._timeClose != value))
				{
					this._timeClose = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shopPhone", DbType="NVarChar(30)")]
		public string shopPhone
		{
			get
			{
				return this._shopPhone;
			}
			set
			{
				if ((this._shopPhone != value))
				{
					this._shopPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workerid", DbType="BigInt NOT NULL")]
		public long workerid
		{
			get
			{
				return this._workerid;
			}
			set
			{
				if ((this._workerid != value))
				{
					this._workerid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string f
		{
			get
			{
				return this._f;
			}
			set
			{
				if ((this._f != value))
				{
					this._f = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_i", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string i
		{
			get
			{
				return this._i;
			}
			set
			{
				if ((this._i != value))
				{
					this._i = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_o", DbType="NVarChar(50)")]
		public string o
		{
			get
			{
				return this._o;
			}
			set
			{
				if ((this._o != value))
				{
					this._o = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(15)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this._phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this._email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="NVarChar(50)")]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this._login = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwordHash", DbType="NVarChar(50)")]
		public string passwordHash
		{
			get
			{
				return this._passwordHash;
			}
			set
			{
				if ((this._passwordHash != value))
				{
					this._passwordHash = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userTypeId", DbType="BigInt NOT NULL")]
		public long userTypeId
		{
			get
			{
				return this._userTypeId;
			}
			set
			{
				if ((this._userTypeId != value))
				{
					this._userTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userTypeName", DbType="NVarChar(20)")]
		public string userTypeName
		{
			get
			{
				return this._userTypeName;
			}
			set
			{
				if ((this._userTypeName != value))
				{
					this._userTypeName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="store.Capacity")]
	public partial class Capacity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _shopId;
		
		private long _goodId;
		
		private System.Nullable<decimal> _count;
		
		private EntityRef<Goods> _Goods;
		
		private EntityRef<Shops> _Shops;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnshopIdChanging(long value);
    partial void OnshopIdChanged();
    partial void OngoodIdChanging(long value);
    partial void OngoodIdChanged();
    partial void OncountChanging(System.Nullable<decimal> value);
    partial void OncountChanged();
    #endregion
		
		public Capacity()
		{
			this._Goods = default(EntityRef<Goods>);
			this._Shops = default(EntityRef<Shops>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shopId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long shopId
		{
			get
			{
				return this._shopId;
			}
			set
			{
				if ((this._shopId != value))
				{
					if (this._Shops.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshopIdChanging(value);
					this.SendPropertyChanging();
					this._shopId = value;
					this.SendPropertyChanged("shopId");
					this.OnshopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goodId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long goodId
		{
			get
			{
				return this._goodId;
			}
			set
			{
				if ((this._goodId != value))
				{
					if (this._Goods.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngoodIdChanging(value);
					this.SendPropertyChanging();
					this._goodId = value;
					this.SendPropertyChanged("goodId");
					this.OngoodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this.OncountChanging(value);
					this.SendPropertyChanging();
					this._count = value;
					this.SendPropertyChanged("count");
					this.OncountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goods_Capacity", Storage="_Goods", ThisKey="goodId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Goods Goods
		{
			get
			{
				return this._Goods.Entity;
			}
			set
			{
				Goods previousValue = this._Goods.Entity;
				if (((previousValue != value) 
							|| (this._Goods.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Goods.Entity = null;
						previousValue.Capacity.Remove(this);
					}
					this._Goods.Entity = value;
					if ((value != null))
					{
						value.Capacity.Add(this);
						this._goodId = value.id;
					}
					else
					{
						this._goodId = default(long);
					}
					this.SendPropertyChanged("Goods");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shops_Capacity", Storage="_Shops", ThisKey="shopId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Shops Shops
		{
			get
			{
				return this._Shops.Entity;
			}
			set
			{
				Shops previousValue = this._Shops.Entity;
				if (((previousValue != value) 
							|| (this._Shops.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shops.Entity = null;
						previousValue.Capacity.Remove(this);
					}
					this._Shops.Entity = value;
					if ((value != null))
					{
						value.Capacity.Add(this);
						this._shopId = value.id;
					}
					else
					{
						this._shopId = default(long);
					}
					this.SendPropertyChanged("Shops");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="store.Supply")]
	public partial class Supply : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _providerId;
		
		private long _shopId;
		
		private long _goodId;
		
		private System.Nullable<decimal> _count;
		
		private decimal _supplyPriceOne;
		
		private System.DateTime _created;
		
		private System.Nullable<bool> _isAddedInStore;
		
		private EntityRef<Goods> _Goods;
		
		private EntityRef<Providers> _Providers;
		
		private EntityRef<Shops> _Shops;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnproviderIdChanging(long value);
    partial void OnproviderIdChanged();
    partial void OnshopIdChanging(long value);
    partial void OnshopIdChanged();
    partial void OngoodIdChanging(long value);
    partial void OngoodIdChanged();
    partial void OncountChanging(System.Nullable<decimal> value);
    partial void OncountChanged();
    partial void OnsupplyPriceOneChanging(decimal value);
    partial void OnsupplyPriceOneChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnisAddedInStoreChanging(System.Nullable<bool> value);
    partial void OnisAddedInStoreChanged();
    #endregion
		
		public Supply()
		{
			this._Goods = default(EntityRef<Goods>);
			this._Providers = default(EntityRef<Providers>);
			this._Shops = default(EntityRef<Shops>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_providerId", DbType="BigInt NOT NULL")]
		public long providerId
		{
			get
			{
				return this._providerId;
			}
			set
			{
				if ((this._providerId != value))
				{
					if (this._Providers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproviderIdChanging(value);
					this.SendPropertyChanging();
					this._providerId = value;
					this.SendPropertyChanged("providerId");
					this.OnproviderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shopId", DbType="BigInt NOT NULL")]
		public long shopId
		{
			get
			{
				return this._shopId;
			}
			set
			{
				if ((this._shopId != value))
				{
					if (this._Shops.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshopIdChanging(value);
					this.SendPropertyChanging();
					this._shopId = value;
					this.SendPropertyChanged("shopId");
					this.OnshopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goodId", DbType="BigInt NOT NULL")]
		public long goodId
		{
			get
			{
				return this._goodId;
			}
			set
			{
				if ((this._goodId != value))
				{
					if (this._Goods.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngoodIdChanging(value);
					this.SendPropertyChanging();
					this._goodId = value;
					this.SendPropertyChanged("goodId");
					this.OngoodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Decimal(5,3)")]
		public System.Nullable<decimal> count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this.OncountChanging(value);
					this.SendPropertyChanging();
					this._count = value;
					this.SendPropertyChanged("count");
					this.OncountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplyPriceOne", DbType="Decimal(10,2) NOT NULL")]
		public decimal supplyPriceOne
		{
			get
			{
				return this._supplyPriceOne;
			}
			set
			{
				if ((this._supplyPriceOne != value))
				{
					this.OnsupplyPriceOneChanging(value);
					this.SendPropertyChanging();
					this._supplyPriceOne = value;
					this.SendPropertyChanged("supplyPriceOne");
					this.OnsupplyPriceOneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isAddedInStore", DbType="Bit")]
		public System.Nullable<bool> isAddedInStore
		{
			get
			{
				return this._isAddedInStore;
			}
			set
			{
				if ((this._isAddedInStore != value))
				{
					this.OnisAddedInStoreChanging(value);
					this.SendPropertyChanging();
					this._isAddedInStore = value;
					this.SendPropertyChanged("isAddedInStore");
					this.OnisAddedInStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goods_Supply", Storage="_Goods", ThisKey="goodId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Goods Goods
		{
			get
			{
				return this._Goods.Entity;
			}
			set
			{
				Goods previousValue = this._Goods.Entity;
				if (((previousValue != value) 
							|| (this._Goods.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Goods.Entity = null;
						previousValue.Supply.Remove(this);
					}
					this._Goods.Entity = value;
					if ((value != null))
					{
						value.Supply.Add(this);
						this._goodId = value.id;
					}
					else
					{
						this._goodId = default(long);
					}
					this.SendPropertyChanged("Goods");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Providers_Supply", Storage="_Providers", ThisKey="providerId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Providers Providers
		{
			get
			{
				return this._Providers.Entity;
			}
			set
			{
				Providers previousValue = this._Providers.Entity;
				if (((previousValue != value) 
							|| (this._Providers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Providers.Entity = null;
						previousValue.Supply.Remove(this);
					}
					this._Providers.Entity = value;
					if ((value != null))
					{
						value.Supply.Add(this);
						this._providerId = value.id;
					}
					else
					{
						this._providerId = default(long);
					}
					this.SendPropertyChanged("Providers");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shops_Supply", Storage="_Shops", ThisKey="shopId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Shops Shops
		{
			get
			{
				return this._Shops.Entity;
			}
			set
			{
				Shops previousValue = this._Shops.Entity;
				if (((previousValue != value) 
							|| (this._Shops.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shops.Entity = null;
						previousValue.Supply.Remove(this);
					}
					this._Shops.Entity = value;
					if ((value != null))
					{
						value.Supply.Add(this);
						this._shopId = value.id;
					}
					else
					{
						this._shopId = default(long);
					}
					this.SendPropertyChanged("Shops");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="store.SupplyView")]
	public partial class SupplyView
	{
		
		private long _id;
		
		private long _providerId;
		
		private string _name;
		
		private string _email;
		
		private string _phone;
		
		private long _shopId;
		
		private string _adress;
		
		private System.TimeSpan _timeOpen;
		
		private System.TimeSpan _timeClose;
		
		private string _shopPhone;
		
		private long _goodId;
		
		private string _goodName;
		
		private System.Nullable<decimal> _count;
		
		private long _typeId;
		
		private decimal _price;
		
		private string _goodInfo;
		
		private string _typeName;
		
		private string _info;
		
		public SupplyView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="BigInt NOT NULL")]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_providerId", DbType="BigInt NOT NULL")]
		public long providerId
		{
			get
			{
				return this._providerId;
			}
			set
			{
				if ((this._providerId != value))
				{
					this._providerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(25)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this._email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(20)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this._phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shopId", DbType="BigInt NOT NULL")]
		public long shopId
		{
			get
			{
				return this._shopId;
			}
			set
			{
				if ((this._shopId != value))
				{
					this._shopId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adress", DbType="NVarChar(100)")]
		public string adress
		{
			get
			{
				return this._adress;
			}
			set
			{
				if ((this._adress != value))
				{
					this._adress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeOpen", DbType="Time NOT NULL")]
		public System.TimeSpan timeOpen
		{
			get
			{
				return this._timeOpen;
			}
			set
			{
				if ((this._timeOpen != value))
				{
					this._timeOpen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeClose", DbType="Time NOT NULL")]
		public System.TimeSpan timeClose
		{
			get
			{
				return this._timeClose;
			}
			set
			{
				if ((this._timeClose != value))
				{
					this._timeClose = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shopPhone", DbType="NVarChar(30)")]
		public string shopPhone
		{
			get
			{
				return this._shopPhone;
			}
			set
			{
				if ((this._shopPhone != value))
				{
					this._shopPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goodId", DbType="BigInt NOT NULL")]
		public long goodId
		{
			get
			{
				return this._goodId;
			}
			set
			{
				if ((this._goodId != value))
				{
					this._goodId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goodName", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string goodName
		{
			get
			{
				return this._goodName;
			}
			set
			{
				if ((this._goodName != value))
				{
					this._goodName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Decimal(5,3)")]
		public System.Nullable<decimal> count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeId", DbType="BigInt NOT NULL")]
		public long typeId
		{
			get
			{
				return this._typeId;
			}
			set
			{
				if ((this._typeId != value))
				{
					this._typeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this._price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goodInfo", DbType="NVarChar(50)")]
		public string goodInfo
		{
			get
			{
				return this._goodInfo;
			}
			set
			{
				if ((this._goodInfo != value))
				{
					this._goodInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeName", DbType="NVarChar(25)")]
		public string typeName
		{
			get
			{
				return this._typeName;
			}
			set
			{
				if ((this._typeName != value))
				{
					this._typeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_info", DbType="NVarChar(50)")]
		public string info
		{
			get
			{
				return this._info;
			}
			set
			{
				if ((this._info != value))
				{
					this._info = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="store.CapacityView")]
	public partial class CapacityView
	{
		
		private string _goodName;
		
		private System.Nullable<decimal> _count;
		
		private long _shopId;
		
		private string _adress;
		
		private System.TimeSpan _timeOpen;
		
		private System.TimeSpan _timeClose;
		
		private string _shopPhone;
		
		private long _goodId;
		
		private long _typeId;
		
		private decimal _goodPrice;
		
		private string _goodInfo;
		
		private string _typeName;
		
		private string _info;
		
		public CapacityView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goodName", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string goodName
		{
			get
			{
				return this._goodName;
			}
			set
			{
				if ((this._goodName != value))
				{
					this._goodName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shopId", DbType="BigInt NOT NULL")]
		public long shopId
		{
			get
			{
				return this._shopId;
			}
			set
			{
				if ((this._shopId != value))
				{
					this._shopId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adress", DbType="NVarChar(100)")]
		public string adress
		{
			get
			{
				return this._adress;
			}
			set
			{
				if ((this._adress != value))
				{
					this._adress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeOpen", DbType="Time NOT NULL")]
		public System.TimeSpan timeOpen
		{
			get
			{
				return this._timeOpen;
			}
			set
			{
				if ((this._timeOpen != value))
				{
					this._timeOpen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeClose", DbType="Time NOT NULL")]
		public System.TimeSpan timeClose
		{
			get
			{
				return this._timeClose;
			}
			set
			{
				if ((this._timeClose != value))
				{
					this._timeClose = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shopPhone", DbType="NVarChar(30)")]
		public string shopPhone
		{
			get
			{
				return this._shopPhone;
			}
			set
			{
				if ((this._shopPhone != value))
				{
					this._shopPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goodId", DbType="BigInt NOT NULL")]
		public long goodId
		{
			get
			{
				return this._goodId;
			}
			set
			{
				if ((this._goodId != value))
				{
					this._goodId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeId", DbType="BigInt NOT NULL")]
		public long typeId
		{
			get
			{
				return this._typeId;
			}
			set
			{
				if ((this._typeId != value))
				{
					this._typeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goodPrice", DbType="Decimal(10,2) NOT NULL")]
		public decimal goodPrice
		{
			get
			{
				return this._goodPrice;
			}
			set
			{
				if ((this._goodPrice != value))
				{
					this._goodPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goodInfo", DbType="NVarChar(50)")]
		public string goodInfo
		{
			get
			{
				return this._goodInfo;
			}
			set
			{
				if ((this._goodInfo != value))
				{
					this._goodInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeName", DbType="NVarChar(25)")]
		public string typeName
		{
			get
			{
				return this._typeName;
			}
			set
			{
				if ((this._typeName != value))
				{
					this._typeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_info", DbType="NVarChar(50)")]
		public string info
		{
			get
			{
				return this._info;
			}
			set
			{
				if ((this._info != value))
				{
					this._info = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
